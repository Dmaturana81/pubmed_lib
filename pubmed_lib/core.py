# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['email', 'api_key', 'searchpb', 'fetch_details']

# %% ../nbs/00_core.ipynb 4
from Bio import Entrez
import sys
import pandas as pd
import xlsxwriter
from datetime import datetime, timedelta, date
from collections import defaultdict, Counter
import  pickle
from fastcore.all import *


# %% ../nbs/00_core.ipynb 5
from .data import *
# from pubmed_lib.parser import *

# %% ../nbs/00_core.ipynb 6
from dotenv import load_dotenv

load_dotenv('pass.env')
email = os.environ.get('EMAIL')
api_key = os.environ.get('API_KEY')

# %% ../nbs/00_core.ipynb 7
def searchpb(
    search_term:str, #Query to be search in pubmed
    search_tag:str = 'Author', #Tag to specifiy the search, can be any from pubmed, Defaul: Author
    retmax:int = 5000, #Maximum number of results to be retrieved
    retmode:str ='xml', #Format of the returned data, options are xml, 
    sort:str='relevance', #Way to sort the results
    mindate:int = None, #Initial data to be search from, year
    maxdate:int = None, #Final data to be search from, year
    ):
    """
    It receive a query to be searched in pubmed and return the handler of the search
    """
    Entrez.email = email
    Entrez.api_key = api_key
    if search_tag not in SEARCH_TAGS.keys():
        print(f"Search tag need to be one of the following {SEARCH_TAGS.keys()}")
        raise AttributeError()
    handle = Entrez.esearch(db='pubmed',
                            sort=sort,
                            retmax=retmax,
                            retmode=retmode,
                            term=search_term+SEARCH_TAGS[search_tag],
                            mindate = mindate,
                            maxdate = maxdate)
    return Entrez.read(handle)

# %% ../nbs/00_core.ipynb 8
def fetch_details(
    IdList:list #List of pubmedIDs to fetch the details
    ):
    """
    It receive a list of pubmedIds from a search, and retrieve all the details of those publications
    """
    ids = ','.join(IdList)
    Entrez.email = email
    Entrez.api_key = api_key
    handle = Entrez.efetch(db='pubmed',
                           retmode='xml',
                           id=ids)
    results = Entrez.read(handle)
    return results
